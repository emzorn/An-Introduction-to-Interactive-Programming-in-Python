# "Memory"

import simplegui
import random

canvas_width = 800
canvas_height = 100
cards = []
exposed = []
state = 0
card_one = 0
card_two = 0
moves = 0

# helper function to initialize globals
def init():
    global cards, exposed, moves
    moves = 0
    cards = [i % 8 for i in range(16)]
    random.shuffle(cards)
    exposed = [False for i in range(16)]

# define event handlers
def mouseclick(pos):
    # add game state logic here
    global state, card_one, card_two, moves
    choice = int(pos[0] / 50)
    if state == 0:
        card_one = choice
        exposed[card_one] = True
        state = 1
        moves += 1
    elif state == 1:
        if not exposed[choice]:
            card_two = int(pos[0] / 50)
            exposed[card_two] = True
            state = 2
            moves += 1
    elif state == 2:
        if not exposed[choice]:
            if cards[card_one] == cards[card_two]:
                pass
            else:
                exposed[card_one] = False
                exposed[card_two] = False
            card_one = choice
            exposed[card_one] = True
            state = 1
    label.set_text("Moves = " + str(moves))

# cards are logically 50x100 pixels in size    
def draw(canvas):
    for i in range(16):
        if exposed[i]:
            canvas.draw_text(str(cards[i]), [canvas_width / 16 * i + canvas_width / 64, canvas_height / 2 + 20], 48, "White", "sans-serif")
        canvas.draw_line([canvas_width / 16 * (i + 1), 0], [canvas_width / 16 * (i + 1), canvas_height], 2, "White")
    canvas.draw_line([0, canvas_height], [canvas_width, canvas_height], 4, "White")
    canvas.draw_line([canvas_width, 0], [canvas_width, canvas_height], 4, "White")
    canvas.draw_line([canvas_width, 0], [0, 0], 4, "White")
    canvas.draw_line([0, 0], [0, canvas_height], 4, "White")

# create frame and add a button and labels
frame = simplegui.create_frame("Memory", 800, 100)
frame.add_button("Reset", init)
label = frame.add_label("Moves = 0")

# initialize global variables
init()

# register event handlers
frame.set_mouseclick_handler(mouseclick)
frame.set_draw_handler(draw)

# get things rolling
frame.start()
